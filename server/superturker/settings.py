"""
Django settings for superturker project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'opikg$3ygj!!tl5x4&h^&$8jf(e2k1_@m4n!3!k1(o%wp1^py7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "ec2-13-58-28-202.us-east-2.compute.amazonaws.com",   # for susumu's dev environment
    "extension.superturker.com",
	"test.superturker.com"
]

# Application definition

INSTALLED_APPS = [
	'scraper.apps.ScraperConfig',
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	#'sslserver',
    #'letsencrypt',
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'superturker.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'superturker.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases


# modification by susumu
# using webfaction app name for database name

db_name = os.path.dirname(os.path.abspath(__file__)).split("/")[4]

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.mysql',
		'HOST': "127.0.0.1",
		'NAME': db_name,
		'USER': db_name,
		'PASSWORD': db_name,
		'PORT': "19255"
	}
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Panama'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

#PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')



LOGGING = {
	'version': 1,   # これを設定しないと怒られる
	'formatters': { # 出力フォーマットを文字列形式で指定する
		'all': {    # 出力フォーマットに`all`という名前をつける
		'format': '\t'.join([
				#"[%(levelname)s]",
				#"asctime:%(asctime)s",
				#"module:%(module)s",
				"message:%(message)s"
				#"process:%(process)d",
				#"thread:%(thread)d",
			])
		},
	},
	'handlers': {  # ログをどこに出すかの設定
		'file': {  # どこに出すかの設定に名前をつける `file`という名前をつけている
			'level': 'DEBUG',  # DEBUG以上のログを取り扱うという意味
			'class': 'logging.FileHandler',  # ログを出力するためのクラスを指定
			'filename': os.path.join(BASE_DIR, 'django.log'),  # どこに出すか
			'formatter': 'all',  # どの出力フォーマットで出すかを名前で指定
		},
		'console': { # どこに出すかの設定をもう一つ、こちらの設定には`console`という名前
			'level': 'DEBUG',
			# こちらは標準出力に出してくれるクラスを指定
			'class': 'logging.StreamHandler', 
			'formatter': 'all'
		},
	},
	'loggers': {  # どんなloggerがあるかを設定する
		'log': {  # commandという名前のloggerを定義
			'handlers': ['file', 'console'],  # 先述のfile, consoleの設定で出力
			'level': 'DEBUG',
		},
	},
}
